// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`IdentityWallet addAuthMethod should throw before authenticate 1`] = `[Error: This method can only be called after authenticate has been called]`;

exports[`IdentityWallet asymmetrically encrypt/decrypt works correctly 1`] = `[Error: IdentityWallet: Could not decrypt message]`;

exports[`IdentityWallet authenticate should throw if no valid authSecrets 1`] = `[Error: No valid auth-secret for this identity]`;

exports[`IdentityWallet authenticate works correctly w/ seed only wallet 1`] = `
Object {
  "main": Object {
    "asymEncryptionKey": "jRKRy3oPhXpUBrFJefO2CJnWw/IoalOPuepAwvTqrEk=",
    "managementKey": "0xa7b76379659b6c19E4DFf46e0DfEa48AFEBA8fe3",
    "signingKey": "027ab5238257532f486cbeeac59a5721bbfec2f13c3d26516ca9d4c5f0ec1aa229",
  },
  "spaces": Object {},
}
`;

exports[`IdentityWallet authenticate works correctly w/ seed only wallet 2`] = `
Object {
  "main": Object {
    "asymEncryptionKey": "jRKRy3oPhXpUBrFJefO2CJnWw/IoalOPuepAwvTqrEk=",
    "managementKey": "0xa7b76379659b6c19E4DFf46e0DfEa48AFEBA8fe3",
    "signingKey": "027ab5238257532f486cbeeac59a5721bbfec2f13c3d26516ca9d4c5f0ec1aa229",
  },
  "spaces": Object {
    "space1": Object {
      "asymEncryptionKey": "aA5XCwjYEv6RhS11GzYb902nsdZns66orubcWGxnm2c=",
      "managementKey": null,
      "signingKey": "0483441873077702f08a9e84d0ff869b5d08cb37361d77c7e5c57777e953670a0debc728f18dc49203596a0b2392d8675bc28d8da62262350123c2c8ca4e709568",
    },
    "space2": Object {
      "asymEncryptionKey": "G/pdGl6OtWv1Vz5LplLZIJxOhH2AmXnF+2BYF5e1TUc=",
      "managementKey": null,
      "signingKey": "04836712d05ad740972438b48b8c88571fa387c856f1c73a9abed17586de49c5dd9c681bc296087f2f5831813b93b15311c2fe483c284ef02d6115fe4a20b2256e",
    },
  },
}
`;

exports[`IdentityWallet authenticate works correctly w/ seed only wallet 3`] = `
Object {
  "main": Object {
    "asymEncryptionKey": "jRKRy3oPhXpUBrFJefO2CJnWw/IoalOPuepAwvTqrEk=",
    "managementKey": "0xa7b76379659b6c19E4DFf46e0DfEa48AFEBA8fe3",
    "signingKey": "027ab5238257532f486cbeeac59a5721bbfec2f13c3d26516ca9d4c5f0ec1aa229",
  },
  "spaces": Object {
    "space3": Object {
      "asymEncryptionKey": "F4OJwO3rpESb+/D8Q8IKGzaNwQJ+TwHt+QOzEtSvkSk=",
      "managementKey": null,
      "signingKey": "046006731db949141b42b64bf1121be029bb5abe9e8267413db1ee9d6c6010507f51607253f839ac3a2ce2c064fca8049b3c4204f7e502ba6b56a961b5a309de4f",
    },
    "space4": Object {
      "asymEncryptionKey": "3QRW9cArRuXgIb0zI/r3/oaoP52TkIWc12Vr52XwAAE=",
      "managementKey": null,
      "signingKey": "047ed187e7ce1f88e6fdd058882cf6f48301efc4992697c623e7fb2837d8d8d8c0cadc19cf5c628c9034943a0ff48b591a1dc0ae83f40878b8b41da4d9bbd98bc6",
    },
  },
}
`;

exports[`IdentityWallet authenticate works correctly w/ seed only wallet 4`] = `
Object {
  "main": Object {
    "asymEncryptionKey": "jRKRy3oPhXpUBrFJefO2CJnWw/IoalOPuepAwvTqrEk=",
    "managementKey": "0xa7b76379659b6c19E4DFf46e0DfEa48AFEBA8fe3",
    "signingKey": "027ab5238257532f486cbeeac59a5721bbfec2f13c3d26516ca9d4c5f0ec1aa229",
  },
  "spaces": Object {
    "space2": Object {
      "asymEncryptionKey": "G/pdGl6OtWv1Vz5LplLZIJxOhH2AmXnF+2BYF5e1TUc=",
      "managementKey": null,
      "signingKey": "04836712d05ad740972438b48b8c88571fa387c856f1c73a9abed17586de49c5dd9c681bc296087f2f5831813b93b15311c2fe483c284ef02d6115fe4a20b2256e",
    },
    "space3": Object {
      "asymEncryptionKey": "F4OJwO3rpESb+/D8Q8IKGzaNwQJ+TwHt+QOzEtSvkSk=",
      "managementKey": null,
      "signingKey": "046006731db949141b42b64bf1121be029bb5abe9e8267413db1ee9d6c6010507f51607253f839ac3a2ce2c064fca8049b3c4204f7e502ba6b56a961b5a309de4f",
    },
  },
}
`;

exports[`IdentityWallet authenticate works correctly w/ seed only wallet 5`] = `
Object {
  "main": Object {
    "asymEncryptionKey": "jRKRy3oPhXpUBrFJefO2CJnWw/IoalOPuepAwvTqrEk=",
    "managementKey": "0350966498e802a007513d518dc12a0a0ab1e48addcec1beaa989c6ff5f5ed226c",
    "signingKey": "027ab5238257532f486cbeeac59a5721bbfec2f13c3d26516ca9d4c5f0ec1aa229",
  },
  "spaces": Object {},
}
`;

exports[`IdentityWallet encrypt/decrypt works correctly 1`] = `[Error: IdentityWallet: Could not decrypt message]`;

exports[`IdentityWallet getLink correctly 1`] = `"0xa7b76379659b6c19E4DFf46e0DfEa48AFEBA8fe3"`;

exports[`IdentityWallet getLink correctly 2`] = `"0xE72E6c37c15986C86Aa94007451750176E9a999F"`;
